// Generated by view binder compiler. Do not edit!
package com.example.githhubdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.githhubdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CodeListAdapterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout cardSampleCatagoriesList;

  @NonNull
  public final TextView code;

  @NonNull
  public final ImageView copyTxt;

  @NonNull
  public final TextView detals;

  @NonNull
  public final ImageView dialerimg;

  @NonNull
  public final LinearLayout linerLayout2;

  @NonNull
  public final ImageView shareTxt;

  private CodeListAdapterBinding(@NonNull CardView rootView,
      @NonNull LinearLayout cardSampleCatagoriesList, @NonNull TextView code,
      @NonNull ImageView copyTxt, @NonNull TextView detals, @NonNull ImageView dialerimg,
      @NonNull LinearLayout linerLayout2, @NonNull ImageView shareTxt) {
    this.rootView = rootView;
    this.cardSampleCatagoriesList = cardSampleCatagoriesList;
    this.code = code;
    this.copyTxt = copyTxt;
    this.detals = detals;
    this.dialerimg = dialerimg;
    this.linerLayout2 = linerLayout2;
    this.shareTxt = shareTxt;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CodeListAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CodeListAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.code_list_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CodeListAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_sample_catagories_list;
      LinearLayout cardSampleCatagoriesList = ViewBindings.findChildViewById(rootView, id);
      if (cardSampleCatagoriesList == null) {
        break missingId;
      }

      id = R.id.code;
      TextView code = ViewBindings.findChildViewById(rootView, id);
      if (code == null) {
        break missingId;
      }

      id = R.id.copy_txt;
      ImageView copyTxt = ViewBindings.findChildViewById(rootView, id);
      if (copyTxt == null) {
        break missingId;
      }

      id = R.id.detals;
      TextView detals = ViewBindings.findChildViewById(rootView, id);
      if (detals == null) {
        break missingId;
      }

      id = R.id.dialerimg;
      ImageView dialerimg = ViewBindings.findChildViewById(rootView, id);
      if (dialerimg == null) {
        break missingId;
      }

      id = R.id.liner_layout2;
      LinearLayout linerLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linerLayout2 == null) {
        break missingId;
      }

      id = R.id.share_txt;
      ImageView shareTxt = ViewBindings.findChildViewById(rootView, id);
      if (shareTxt == null) {
        break missingId;
      }

      return new CodeListAdapterBinding((CardView) rootView, cardSampleCatagoriesList, code,
          copyTxt, detals, dialerimg, linerLayout2, shareTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

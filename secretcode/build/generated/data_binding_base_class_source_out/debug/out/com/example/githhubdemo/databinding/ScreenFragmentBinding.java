// Generated by view binder compiler. Do not edit!
package com.example.githhubdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.githhubdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ScreenFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View dividerAspectRatio;

  @NonNull
  public final View dividerPixelDensity;

  @NonNull
  public final View dividerScreen;

  @NonNull
  public final View dividerVerticalResolution;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvAspectRatio;

  @NonNull
  public final TextView tvHorizontalResolution;

  @NonNull
  public final TextView tvPixelDensity;

  @NonNull
  public final TextView tvScreenSize;

  @NonNull
  public final TextView tvVerticalResolution;

  @NonNull
  public final View viewAspectRatio;

  @NonNull
  public final View viewHorizontalResolution;

  @NonNull
  public final View viewPixelDensity;

  @NonNull
  public final View viewScreen;

  @NonNull
  public final View viewVerticalResolution;

  private ScreenFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull View dividerAspectRatio, @NonNull View dividerPixelDensity,
      @NonNull View dividerScreen, @NonNull View dividerVerticalResolution,
      @NonNull ScrollView scrollView, @NonNull TextView tvAspectRatio,
      @NonNull TextView tvHorizontalResolution, @NonNull TextView tvPixelDensity,
      @NonNull TextView tvScreenSize, @NonNull TextView tvVerticalResolution,
      @NonNull View viewAspectRatio, @NonNull View viewHorizontalResolution,
      @NonNull View viewPixelDensity, @NonNull View viewScreen,
      @NonNull View viewVerticalResolution) {
    this.rootView = rootView;
    this.dividerAspectRatio = dividerAspectRatio;
    this.dividerPixelDensity = dividerPixelDensity;
    this.dividerScreen = dividerScreen;
    this.dividerVerticalResolution = dividerVerticalResolution;
    this.scrollView = scrollView;
    this.tvAspectRatio = tvAspectRatio;
    this.tvHorizontalResolution = tvHorizontalResolution;
    this.tvPixelDensity = tvPixelDensity;
    this.tvScreenSize = tvScreenSize;
    this.tvVerticalResolution = tvVerticalResolution;
    this.viewAspectRatio = viewAspectRatio;
    this.viewHorizontalResolution = viewHorizontalResolution;
    this.viewPixelDensity = viewPixelDensity;
    this.viewScreen = viewScreen;
    this.viewVerticalResolution = viewVerticalResolution;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ScreenFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ScreenFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.screen_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ScreenFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dividerAspectRatio;
      View dividerAspectRatio = ViewBindings.findChildViewById(rootView, id);
      if (dividerAspectRatio == null) {
        break missingId;
      }

      id = R.id.dividerPixelDensity;
      View dividerPixelDensity = ViewBindings.findChildViewById(rootView, id);
      if (dividerPixelDensity == null) {
        break missingId;
      }

      id = R.id.dividerScreen;
      View dividerScreen = ViewBindings.findChildViewById(rootView, id);
      if (dividerScreen == null) {
        break missingId;
      }

      id = R.id.dividerVerticalResolution;
      View dividerVerticalResolution = ViewBindings.findChildViewById(rootView, id);
      if (dividerVerticalResolution == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvAspectRatio;
      TextView tvAspectRatio = ViewBindings.findChildViewById(rootView, id);
      if (tvAspectRatio == null) {
        break missingId;
      }

      id = R.id.tvHorizontalResolution;
      TextView tvHorizontalResolution = ViewBindings.findChildViewById(rootView, id);
      if (tvHorizontalResolution == null) {
        break missingId;
      }

      id = R.id.tvPixelDensity;
      TextView tvPixelDensity = ViewBindings.findChildViewById(rootView, id);
      if (tvPixelDensity == null) {
        break missingId;
      }

      id = R.id.tvScreenSize;
      TextView tvScreenSize = ViewBindings.findChildViewById(rootView, id);
      if (tvScreenSize == null) {
        break missingId;
      }

      id = R.id.tvVerticalResolution;
      TextView tvVerticalResolution = ViewBindings.findChildViewById(rootView, id);
      if (tvVerticalResolution == null) {
        break missingId;
      }

      id = R.id.viewAspectRatio;
      View viewAspectRatio = ViewBindings.findChildViewById(rootView, id);
      if (viewAspectRatio == null) {
        break missingId;
      }

      id = R.id.viewHorizontalResolution;
      View viewHorizontalResolution = ViewBindings.findChildViewById(rootView, id);
      if (viewHorizontalResolution == null) {
        break missingId;
      }

      id = R.id.viewPixelDensity;
      View viewPixelDensity = ViewBindings.findChildViewById(rootView, id);
      if (viewPixelDensity == null) {
        break missingId;
      }

      id = R.id.viewScreen;
      View viewScreen = ViewBindings.findChildViewById(rootView, id);
      if (viewScreen == null) {
        break missingId;
      }

      id = R.id.viewVerticalResolution;
      View viewVerticalResolution = ViewBindings.findChildViewById(rootView, id);
      if (viewVerticalResolution == null) {
        break missingId;
      }

      return new ScreenFragmentBinding((ConstraintLayout) rootView, dividerAspectRatio,
          dividerPixelDensity, dividerScreen, dividerVerticalResolution, scrollView, tvAspectRatio,
          tvHorizontalResolution, tvPixelDensity, tvScreenSize, tvVerticalResolution,
          viewAspectRatio, viewHorizontalResolution, viewPixelDensity, viewScreen,
          viewVerticalResolution);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.githhubdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.githhubdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StorageFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View divider15;

  @NonNull
  public final View divider16;

  @NonNull
  public final LinearLayout llStorage;

  @NonNull
  public final TextView tvFreeStorage;

  @NonNull
  public final TextView tvTotalStorage;

  @NonNull
  public final TextView tvUsedStorage;

  @NonNull
  public final View view;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  private StorageFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull View divider15,
      @NonNull View divider16, @NonNull LinearLayout llStorage, @NonNull TextView tvFreeStorage,
      @NonNull TextView tvTotalStorage, @NonNull TextView tvUsedStorage, @NonNull View view,
      @NonNull View view1, @NonNull View view2) {
    this.rootView = rootView;
    this.divider15 = divider15;
    this.divider16 = divider16;
    this.llStorage = llStorage;
    this.tvFreeStorage = tvFreeStorage;
    this.tvTotalStorage = tvTotalStorage;
    this.tvUsedStorage = tvUsedStorage;
    this.view = view;
    this.view1 = view1;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StorageFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StorageFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.storage_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StorageFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider15;
      View divider15 = ViewBindings.findChildViewById(rootView, id);
      if (divider15 == null) {
        break missingId;
      }

      id = R.id.divider16;
      View divider16 = ViewBindings.findChildViewById(rootView, id);
      if (divider16 == null) {
        break missingId;
      }

      id = R.id.llStorage;
      LinearLayout llStorage = ViewBindings.findChildViewById(rootView, id);
      if (llStorage == null) {
        break missingId;
      }

      id = R.id.tvFreeStorage;
      TextView tvFreeStorage = ViewBindings.findChildViewById(rootView, id);
      if (tvFreeStorage == null) {
        break missingId;
      }

      id = R.id.tvTotalStorage;
      TextView tvTotalStorage = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalStorage == null) {
        break missingId;
      }

      id = R.id.tvUsedStorage;
      TextView tvUsedStorage = ViewBindings.findChildViewById(rootView, id);
      if (tvUsedStorage == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new StorageFragmentBinding((ConstraintLayout) rootView, divider15, divider16,
          llStorage, tvFreeStorage, tvTotalStorage, tvUsedStorage, view, view1, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

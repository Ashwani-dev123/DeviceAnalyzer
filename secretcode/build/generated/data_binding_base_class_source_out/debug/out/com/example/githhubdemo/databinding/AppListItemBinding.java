// Generated by view binder compiler. Do not edit!
package com.example.githhubdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.githhubdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivAppIcon;

  @NonNull
  public final LinearLayout llAppSize;

  @NonNull
  public final TextView tvAppName;

  @NonNull
  public final TextView tvAppPackageName;

  @NonNull
  public final TextView tvAppSize;

  @NonNull
  public final TextView tvAppVersion;

  private AppListItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivAppIcon,
      @NonNull LinearLayout llAppSize, @NonNull TextView tvAppName,
      @NonNull TextView tvAppPackageName, @NonNull TextView tvAppSize,
      @NonNull TextView tvAppVersion) {
    this.rootView = rootView;
    this.ivAppIcon = ivAppIcon;
    this.llAppSize = llAppSize;
    this.tvAppName = tvAppName;
    this.tvAppPackageName = tvAppPackageName;
    this.tvAppSize = tvAppSize;
    this.tvAppVersion = tvAppVersion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivAppIcon;
      ImageView ivAppIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivAppIcon == null) {
        break missingId;
      }

      id = R.id.llAppSize;
      LinearLayout llAppSize = ViewBindings.findChildViewById(rootView, id);
      if (llAppSize == null) {
        break missingId;
      }

      id = R.id.tvAppName;
      TextView tvAppName = ViewBindings.findChildViewById(rootView, id);
      if (tvAppName == null) {
        break missingId;
      }

      id = R.id.tvAppPackageName;
      TextView tvAppPackageName = ViewBindings.findChildViewById(rootView, id);
      if (tvAppPackageName == null) {
        break missingId;
      }

      id = R.id.tvAppSize;
      TextView tvAppSize = ViewBindings.findChildViewById(rootView, id);
      if (tvAppSize == null) {
        break missingId;
      }

      id = R.id.tvAppVersion;
      TextView tvAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvAppVersion == null) {
        break missingId;
      }

      return new AppListItemBinding((ConstraintLayout) rootView, ivAppIcon, llAppSize, tvAppName,
          tvAppPackageName, tvAppSize, tvAppVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

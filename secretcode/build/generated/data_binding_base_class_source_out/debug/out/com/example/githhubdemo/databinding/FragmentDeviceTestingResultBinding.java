// Generated by view binder compiler. Do not edit!
package com.example.githhubdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.githhubdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDeviceTestingResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnFinished;

  @NonNull
  public final LinearLayout btnPdfShare;

  @NonNull
  public final LinearLayout btnShare;

  @NonNull
  public final ConstraintLayout clMain;

  @NonNull
  public final ConstraintLayout clPdf;

  @NonNull
  public final ImageView ivAccelerometer;

  @NonNull
  public final ImageView ivAccelerometerChecked;

  @NonNull
  public final ImageView ivBluetooth;

  @NonNull
  public final ImageView ivBluetoothChecked;

  @NonNull
  public final ImageView ivCharging;

  @NonNull
  public final ImageView ivChargingChecked;

  @NonNull
  public final ImageView ivDisplay;

  @NonNull
  public final ImageView ivDisplayChecked;

  @NonNull
  public final ImageView ivEarProximity;

  @NonNull
  public final ImageView ivEarProximityChecked;

  @NonNull
  public final ImageView ivEarSpeaker;

  @NonNull
  public final ImageView ivEarSpeakerChecked;

  @NonNull
  public final ImageView ivFlashlight;

  @NonNull
  public final ImageView ivFlashlightChecked;

  @NonNull
  public final ImageView ivLightSensor;

  @NonNull
  public final ImageView ivLightSensorChecked;

  @NonNull
  public final ImageView ivLoudSpeaker;

  @NonNull
  public final ImageView ivLoudSpeakerChecked;

  @NonNull
  public final ImageView ivMicrophone;

  @NonNull
  public final ImageView ivMicrophoneChecked;

  @NonNull
  public final ImageView ivPdfAccelerometer;

  @NonNull
  public final ImageView ivPdfAccelerometerChecked;

  @NonNull
  public final ImageView ivPdfBluetooth;

  @NonNull
  public final ImageView ivPdfBluetoothChecked;

  @NonNull
  public final ImageView ivPdfCharging;

  @NonNull
  public final ImageView ivPdfChargingChecked;

  @NonNull
  public final ImageView ivPdfDisplay;

  @NonNull
  public final ImageView ivPdfDisplayChecked;

  @NonNull
  public final ImageView ivPdfEarProximity;

  @NonNull
  public final ImageView ivPdfEarProximityChecked;

  @NonNull
  public final ImageView ivPdfEarSpeaker;

  @NonNull
  public final ImageView ivPdfEarSpeakerChecked;

  @NonNull
  public final ImageView ivPdfFlashlight;

  @NonNull
  public final ImageView ivPdfFlashlightChecked;

  @NonNull
  public final ImageView ivPdfLightSensor;

  @NonNull
  public final ImageView ivPdfLightSensorChecked;

  @NonNull
  public final ImageView ivPdfLoudSpeaker;

  @NonNull
  public final ImageView ivPdfLoudSpeakerChecked;

  @NonNull
  public final ImageView ivPdfMicrophone;

  @NonNull
  public final ImageView ivPdfMicrophoneChecked;

  @NonNull
  public final ImageView ivPdfShowResult;

  @NonNull
  public final ImageView ivPdfVibration;

  @NonNull
  public final ImageView ivPdfVibrationChecked;

  @NonNull
  public final ImageView ivPdfVolumeDown;

  @NonNull
  public final ImageView ivPdfVolumeDownChecked;

  @NonNull
  public final ImageView ivPdfVolumeUp;

  @NonNull
  public final ImageView ivPdfVolumeUpChecked;

  @NonNull
  public final ImageView ivShowResult;

  @NonNull
  public final ImageView ivVibration;

  @NonNull
  public final ImageView ivVibrationChecked;

  @NonNull
  public final ImageView ivVolumeDown;

  @NonNull
  public final ImageView ivVolumeDownChecked;

  @NonNull
  public final ImageView ivVolumeUp;

  @NonNull
  public final ImageView ivVolumeUpChecked;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final NestedScrollView nestedScrollViewPdf;

  @NonNull
  public final TextView tvDeviceCondition;

  @NonNull
  public final TextView tvPdfDeviceCondition;

  @NonNull
  public final TextView tvPdfResultPercentage;

  @NonNull
  public final TextView tvPdfResultText;

  @NonNull
  public final TextView tvPdfTitle;

  @NonNull
  public final TextView tvResultPercentage;

  @NonNull
  public final TextView tvResultText;

  @NonNull
  public final TextView tvTitle;

  private FragmentDeviceTestingResultBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout btnFinished, @NonNull LinearLayout btnPdfShare,
      @NonNull LinearLayout btnShare, @NonNull ConstraintLayout clMain,
      @NonNull ConstraintLayout clPdf, @NonNull ImageView ivAccelerometer,
      @NonNull ImageView ivAccelerometerChecked, @NonNull ImageView ivBluetooth,
      @NonNull ImageView ivBluetoothChecked, @NonNull ImageView ivCharging,
      @NonNull ImageView ivChargingChecked, @NonNull ImageView ivDisplay,
      @NonNull ImageView ivDisplayChecked, @NonNull ImageView ivEarProximity,
      @NonNull ImageView ivEarProximityChecked, @NonNull ImageView ivEarSpeaker,
      @NonNull ImageView ivEarSpeakerChecked, @NonNull ImageView ivFlashlight,
      @NonNull ImageView ivFlashlightChecked, @NonNull ImageView ivLightSensor,
      @NonNull ImageView ivLightSensorChecked, @NonNull ImageView ivLoudSpeaker,
      @NonNull ImageView ivLoudSpeakerChecked, @NonNull ImageView ivMicrophone,
      @NonNull ImageView ivMicrophoneChecked, @NonNull ImageView ivPdfAccelerometer,
      @NonNull ImageView ivPdfAccelerometerChecked, @NonNull ImageView ivPdfBluetooth,
      @NonNull ImageView ivPdfBluetoothChecked, @NonNull ImageView ivPdfCharging,
      @NonNull ImageView ivPdfChargingChecked, @NonNull ImageView ivPdfDisplay,
      @NonNull ImageView ivPdfDisplayChecked, @NonNull ImageView ivPdfEarProximity,
      @NonNull ImageView ivPdfEarProximityChecked, @NonNull ImageView ivPdfEarSpeaker,
      @NonNull ImageView ivPdfEarSpeakerChecked, @NonNull ImageView ivPdfFlashlight,
      @NonNull ImageView ivPdfFlashlightChecked, @NonNull ImageView ivPdfLightSensor,
      @NonNull ImageView ivPdfLightSensorChecked, @NonNull ImageView ivPdfLoudSpeaker,
      @NonNull ImageView ivPdfLoudSpeakerChecked, @NonNull ImageView ivPdfMicrophone,
      @NonNull ImageView ivPdfMicrophoneChecked, @NonNull ImageView ivPdfShowResult,
      @NonNull ImageView ivPdfVibration, @NonNull ImageView ivPdfVibrationChecked,
      @NonNull ImageView ivPdfVolumeDown, @NonNull ImageView ivPdfVolumeDownChecked,
      @NonNull ImageView ivPdfVolumeUp, @NonNull ImageView ivPdfVolumeUpChecked,
      @NonNull ImageView ivShowResult, @NonNull ImageView ivVibration,
      @NonNull ImageView ivVibrationChecked, @NonNull ImageView ivVolumeDown,
      @NonNull ImageView ivVolumeDownChecked, @NonNull ImageView ivVolumeUp,
      @NonNull ImageView ivVolumeUpChecked, @NonNull NestedScrollView nestedScrollView,
      @NonNull NestedScrollView nestedScrollViewPdf, @NonNull TextView tvDeviceCondition,
      @NonNull TextView tvPdfDeviceCondition, @NonNull TextView tvPdfResultPercentage,
      @NonNull TextView tvPdfResultText, @NonNull TextView tvPdfTitle,
      @NonNull TextView tvResultPercentage, @NonNull TextView tvResultText,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnFinished = btnFinished;
    this.btnPdfShare = btnPdfShare;
    this.btnShare = btnShare;
    this.clMain = clMain;
    this.clPdf = clPdf;
    this.ivAccelerometer = ivAccelerometer;
    this.ivAccelerometerChecked = ivAccelerometerChecked;
    this.ivBluetooth = ivBluetooth;
    this.ivBluetoothChecked = ivBluetoothChecked;
    this.ivCharging = ivCharging;
    this.ivChargingChecked = ivChargingChecked;
    this.ivDisplay = ivDisplay;
    this.ivDisplayChecked = ivDisplayChecked;
    this.ivEarProximity = ivEarProximity;
    this.ivEarProximityChecked = ivEarProximityChecked;
    this.ivEarSpeaker = ivEarSpeaker;
    this.ivEarSpeakerChecked = ivEarSpeakerChecked;
    this.ivFlashlight = ivFlashlight;
    this.ivFlashlightChecked = ivFlashlightChecked;
    this.ivLightSensor = ivLightSensor;
    this.ivLightSensorChecked = ivLightSensorChecked;
    this.ivLoudSpeaker = ivLoudSpeaker;
    this.ivLoudSpeakerChecked = ivLoudSpeakerChecked;
    this.ivMicrophone = ivMicrophone;
    this.ivMicrophoneChecked = ivMicrophoneChecked;
    this.ivPdfAccelerometer = ivPdfAccelerometer;
    this.ivPdfAccelerometerChecked = ivPdfAccelerometerChecked;
    this.ivPdfBluetooth = ivPdfBluetooth;
    this.ivPdfBluetoothChecked = ivPdfBluetoothChecked;
    this.ivPdfCharging = ivPdfCharging;
    this.ivPdfChargingChecked = ivPdfChargingChecked;
    this.ivPdfDisplay = ivPdfDisplay;
    this.ivPdfDisplayChecked = ivPdfDisplayChecked;
    this.ivPdfEarProximity = ivPdfEarProximity;
    this.ivPdfEarProximityChecked = ivPdfEarProximityChecked;
    this.ivPdfEarSpeaker = ivPdfEarSpeaker;
    this.ivPdfEarSpeakerChecked = ivPdfEarSpeakerChecked;
    this.ivPdfFlashlight = ivPdfFlashlight;
    this.ivPdfFlashlightChecked = ivPdfFlashlightChecked;
    this.ivPdfLightSensor = ivPdfLightSensor;
    this.ivPdfLightSensorChecked = ivPdfLightSensorChecked;
    this.ivPdfLoudSpeaker = ivPdfLoudSpeaker;
    this.ivPdfLoudSpeakerChecked = ivPdfLoudSpeakerChecked;
    this.ivPdfMicrophone = ivPdfMicrophone;
    this.ivPdfMicrophoneChecked = ivPdfMicrophoneChecked;
    this.ivPdfShowResult = ivPdfShowResult;
    this.ivPdfVibration = ivPdfVibration;
    this.ivPdfVibrationChecked = ivPdfVibrationChecked;
    this.ivPdfVolumeDown = ivPdfVolumeDown;
    this.ivPdfVolumeDownChecked = ivPdfVolumeDownChecked;
    this.ivPdfVolumeUp = ivPdfVolumeUp;
    this.ivPdfVolumeUpChecked = ivPdfVolumeUpChecked;
    this.ivShowResult = ivShowResult;
    this.ivVibration = ivVibration;
    this.ivVibrationChecked = ivVibrationChecked;
    this.ivVolumeDown = ivVolumeDown;
    this.ivVolumeDownChecked = ivVolumeDownChecked;
    this.ivVolumeUp = ivVolumeUp;
    this.ivVolumeUpChecked = ivVolumeUpChecked;
    this.nestedScrollView = nestedScrollView;
    this.nestedScrollViewPdf = nestedScrollViewPdf;
    this.tvDeviceCondition = tvDeviceCondition;
    this.tvPdfDeviceCondition = tvPdfDeviceCondition;
    this.tvPdfResultPercentage = tvPdfResultPercentage;
    this.tvPdfResultText = tvPdfResultText;
    this.tvPdfTitle = tvPdfTitle;
    this.tvResultPercentage = tvResultPercentage;
    this.tvResultText = tvResultText;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDeviceTestingResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDeviceTestingResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_device_testing_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDeviceTestingResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFinished;
      LinearLayout btnFinished = ViewBindings.findChildViewById(rootView, id);
      if (btnFinished == null) {
        break missingId;
      }

      id = R.id.btnPdfShare;
      LinearLayout btnPdfShare = ViewBindings.findChildViewById(rootView, id);
      if (btnPdfShare == null) {
        break missingId;
      }

      id = R.id.btnShare;
      LinearLayout btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.clMain;
      ConstraintLayout clMain = ViewBindings.findChildViewById(rootView, id);
      if (clMain == null) {
        break missingId;
      }

      id = R.id.clPdf;
      ConstraintLayout clPdf = ViewBindings.findChildViewById(rootView, id);
      if (clPdf == null) {
        break missingId;
      }

      id = R.id.ivAccelerometer;
      ImageView ivAccelerometer = ViewBindings.findChildViewById(rootView, id);
      if (ivAccelerometer == null) {
        break missingId;
      }

      id = R.id.ivAccelerometerChecked;
      ImageView ivAccelerometerChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivAccelerometerChecked == null) {
        break missingId;
      }

      id = R.id.ivBluetooth;
      ImageView ivBluetooth = ViewBindings.findChildViewById(rootView, id);
      if (ivBluetooth == null) {
        break missingId;
      }

      id = R.id.ivBluetoothChecked;
      ImageView ivBluetoothChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivBluetoothChecked == null) {
        break missingId;
      }

      id = R.id.ivCharging;
      ImageView ivCharging = ViewBindings.findChildViewById(rootView, id);
      if (ivCharging == null) {
        break missingId;
      }

      id = R.id.ivChargingChecked;
      ImageView ivChargingChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivChargingChecked == null) {
        break missingId;
      }

      id = R.id.ivDisplay;
      ImageView ivDisplay = ViewBindings.findChildViewById(rootView, id);
      if (ivDisplay == null) {
        break missingId;
      }

      id = R.id.ivDisplayChecked;
      ImageView ivDisplayChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivDisplayChecked == null) {
        break missingId;
      }

      id = R.id.ivEarProximity;
      ImageView ivEarProximity = ViewBindings.findChildViewById(rootView, id);
      if (ivEarProximity == null) {
        break missingId;
      }

      id = R.id.ivEarProximityChecked;
      ImageView ivEarProximityChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivEarProximityChecked == null) {
        break missingId;
      }

      id = R.id.ivEarSpeaker;
      ImageView ivEarSpeaker = ViewBindings.findChildViewById(rootView, id);
      if (ivEarSpeaker == null) {
        break missingId;
      }

      id = R.id.ivEarSpeakerChecked;
      ImageView ivEarSpeakerChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivEarSpeakerChecked == null) {
        break missingId;
      }

      id = R.id.ivFlashlight;
      ImageView ivFlashlight = ViewBindings.findChildViewById(rootView, id);
      if (ivFlashlight == null) {
        break missingId;
      }

      id = R.id.ivFlashlightChecked;
      ImageView ivFlashlightChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivFlashlightChecked == null) {
        break missingId;
      }

      id = R.id.ivLightSensor;
      ImageView ivLightSensor = ViewBindings.findChildViewById(rootView, id);
      if (ivLightSensor == null) {
        break missingId;
      }

      id = R.id.ivLightSensorChecked;
      ImageView ivLightSensorChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivLightSensorChecked == null) {
        break missingId;
      }

      id = R.id.ivLoudSpeaker;
      ImageView ivLoudSpeaker = ViewBindings.findChildViewById(rootView, id);
      if (ivLoudSpeaker == null) {
        break missingId;
      }

      id = R.id.ivLoudSpeakerChecked;
      ImageView ivLoudSpeakerChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivLoudSpeakerChecked == null) {
        break missingId;
      }

      id = R.id.ivMicrophone;
      ImageView ivMicrophone = ViewBindings.findChildViewById(rootView, id);
      if (ivMicrophone == null) {
        break missingId;
      }

      id = R.id.ivMicrophoneChecked;
      ImageView ivMicrophoneChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivMicrophoneChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfAccelerometer;
      ImageView ivPdfAccelerometer = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfAccelerometer == null) {
        break missingId;
      }

      id = R.id.ivPdfAccelerometerChecked;
      ImageView ivPdfAccelerometerChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfAccelerometerChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfBluetooth;
      ImageView ivPdfBluetooth = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfBluetooth == null) {
        break missingId;
      }

      id = R.id.ivPdfBluetoothChecked;
      ImageView ivPdfBluetoothChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfBluetoothChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfCharging;
      ImageView ivPdfCharging = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfCharging == null) {
        break missingId;
      }

      id = R.id.ivPdfChargingChecked;
      ImageView ivPdfChargingChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfChargingChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfDisplay;
      ImageView ivPdfDisplay = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfDisplay == null) {
        break missingId;
      }

      id = R.id.ivPdfDisplayChecked;
      ImageView ivPdfDisplayChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfDisplayChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfEarProximity;
      ImageView ivPdfEarProximity = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfEarProximity == null) {
        break missingId;
      }

      id = R.id.ivPdfEarProximityChecked;
      ImageView ivPdfEarProximityChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfEarProximityChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfEarSpeaker;
      ImageView ivPdfEarSpeaker = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfEarSpeaker == null) {
        break missingId;
      }

      id = R.id.ivPdfEarSpeakerChecked;
      ImageView ivPdfEarSpeakerChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfEarSpeakerChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfFlashlight;
      ImageView ivPdfFlashlight = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfFlashlight == null) {
        break missingId;
      }

      id = R.id.ivPdfFlashlightChecked;
      ImageView ivPdfFlashlightChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfFlashlightChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfLightSensor;
      ImageView ivPdfLightSensor = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfLightSensor == null) {
        break missingId;
      }

      id = R.id.ivPdfLightSensorChecked;
      ImageView ivPdfLightSensorChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfLightSensorChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfLoudSpeaker;
      ImageView ivPdfLoudSpeaker = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfLoudSpeaker == null) {
        break missingId;
      }

      id = R.id.ivPdfLoudSpeakerChecked;
      ImageView ivPdfLoudSpeakerChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfLoudSpeakerChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfMicrophone;
      ImageView ivPdfMicrophone = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfMicrophone == null) {
        break missingId;
      }

      id = R.id.ivPdfMicrophoneChecked;
      ImageView ivPdfMicrophoneChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfMicrophoneChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfShowResult;
      ImageView ivPdfShowResult = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfShowResult == null) {
        break missingId;
      }

      id = R.id.ivPdfVibration;
      ImageView ivPdfVibration = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfVibration == null) {
        break missingId;
      }

      id = R.id.ivPdfVibrationChecked;
      ImageView ivPdfVibrationChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfVibrationChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfVolumeDown;
      ImageView ivPdfVolumeDown = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfVolumeDown == null) {
        break missingId;
      }

      id = R.id.ivPdfVolumeDownChecked;
      ImageView ivPdfVolumeDownChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfVolumeDownChecked == null) {
        break missingId;
      }

      id = R.id.ivPdfVolumeUp;
      ImageView ivPdfVolumeUp = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfVolumeUp == null) {
        break missingId;
      }

      id = R.id.ivPdfVolumeUpChecked;
      ImageView ivPdfVolumeUpChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivPdfVolumeUpChecked == null) {
        break missingId;
      }

      id = R.id.ivShowResult;
      ImageView ivShowResult = ViewBindings.findChildViewById(rootView, id);
      if (ivShowResult == null) {
        break missingId;
      }

      id = R.id.ivVibration;
      ImageView ivVibration = ViewBindings.findChildViewById(rootView, id);
      if (ivVibration == null) {
        break missingId;
      }

      id = R.id.ivVibrationChecked;
      ImageView ivVibrationChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivVibrationChecked == null) {
        break missingId;
      }

      id = R.id.ivVolumeDown;
      ImageView ivVolumeDown = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeDown == null) {
        break missingId;
      }

      id = R.id.ivVolumeDownChecked;
      ImageView ivVolumeDownChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeDownChecked == null) {
        break missingId;
      }

      id = R.id.ivVolumeUp;
      ImageView ivVolumeUp = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeUp == null) {
        break missingId;
      }

      id = R.id.ivVolumeUpChecked;
      ImageView ivVolumeUpChecked = ViewBindings.findChildViewById(rootView, id);
      if (ivVolumeUpChecked == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.nestedScrollViewPdf;
      NestedScrollView nestedScrollViewPdf = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollViewPdf == null) {
        break missingId;
      }

      id = R.id.tvDeviceCondition;
      TextView tvDeviceCondition = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceCondition == null) {
        break missingId;
      }

      id = R.id.tvPdfDeviceCondition;
      TextView tvPdfDeviceCondition = ViewBindings.findChildViewById(rootView, id);
      if (tvPdfDeviceCondition == null) {
        break missingId;
      }

      id = R.id.tvPdfResultPercentage;
      TextView tvPdfResultPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvPdfResultPercentage == null) {
        break missingId;
      }

      id = R.id.tvPdfResultText;
      TextView tvPdfResultText = ViewBindings.findChildViewById(rootView, id);
      if (tvPdfResultText == null) {
        break missingId;
      }

      id = R.id.tvPdfTitle;
      TextView tvPdfTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvPdfTitle == null) {
        break missingId;
      }

      id = R.id.tvResultPercentage;
      TextView tvResultPercentage = ViewBindings.findChildViewById(rootView, id);
      if (tvResultPercentage == null) {
        break missingId;
      }

      id = R.id.tvResultText;
      TextView tvResultText = ViewBindings.findChildViewById(rootView, id);
      if (tvResultText == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new FragmentDeviceTestingResultBinding((ConstraintLayout) rootView, btnFinished,
          btnPdfShare, btnShare, clMain, clPdf, ivAccelerometer, ivAccelerometerChecked,
          ivBluetooth, ivBluetoothChecked, ivCharging, ivChargingChecked, ivDisplay,
          ivDisplayChecked, ivEarProximity, ivEarProximityChecked, ivEarSpeaker,
          ivEarSpeakerChecked, ivFlashlight, ivFlashlightChecked, ivLightSensor,
          ivLightSensorChecked, ivLoudSpeaker, ivLoudSpeakerChecked, ivMicrophone,
          ivMicrophoneChecked, ivPdfAccelerometer, ivPdfAccelerometerChecked, ivPdfBluetooth,
          ivPdfBluetoothChecked, ivPdfCharging, ivPdfChargingChecked, ivPdfDisplay,
          ivPdfDisplayChecked, ivPdfEarProximity, ivPdfEarProximityChecked, ivPdfEarSpeaker,
          ivPdfEarSpeakerChecked, ivPdfFlashlight, ivPdfFlashlightChecked, ivPdfLightSensor,
          ivPdfLightSensorChecked, ivPdfLoudSpeaker, ivPdfLoudSpeakerChecked, ivPdfMicrophone,
          ivPdfMicrophoneChecked, ivPdfShowResult, ivPdfVibration, ivPdfVibrationChecked,
          ivPdfVolumeDown, ivPdfVolumeDownChecked, ivPdfVolumeUp, ivPdfVolumeUpChecked,
          ivShowResult, ivVibration, ivVibrationChecked, ivVolumeDown, ivVolumeDownChecked,
          ivVolumeUp, ivVolumeUpChecked, nestedScrollView, nestedScrollViewPdf, tvDeviceCondition,
          tvPdfDeviceCondition, tvPdfResultPercentage, tvPdfResultText, tvPdfTitle,
          tvResultPercentage, tvResultText, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
